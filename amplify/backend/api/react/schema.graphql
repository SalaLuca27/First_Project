# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

type User @model {
  id: ID!
  name: String!
  surname: String!
  age: Int!
  username: String!
  password: String!
  posts: [Post] @hasMany
}

type Post @model {
  id: ID!
  description: String!
  userId: User @belongsTo
}

type Query {
  users: [User!]! 
    @function(name: "getUsers-${env}")
    
  user(id: ID!) : User!
    @function(name: "getUser-${env}")
    
  me: User!

  posts: [Post!]!
    @function(name: "getPosts-{env}")

  post(id: ID!) : Post!
    @function(name: "getPost-{env}")
}

type Mutation {
  login(username: String!, password: String!) : String!

  create(name: String!, surname: String!, age: Int!, username: String!, password: String!): User!
   @function(name: "createUser-${env}")
  
  remove(id: ID!) : Boolean!
    @function(name: "removeUser-${env}")

  update(id: ID!, username: String!) : User!

  newPost(description: String!) : Post!
    @function(name: "createPost-{env}")

  modifyPost(id: ID!, description: String!, userId: ID!) : Post!

  removePost(id: ID!) : Boolean!
    @function(name: "removePost-{env}")
}

type Subscription {
  postCreated: Post!
  postUpdated: Post!
  postDeleted: Post!
  userCreated: User!
  userUpdated: User!
  userDeleted: User!
}
